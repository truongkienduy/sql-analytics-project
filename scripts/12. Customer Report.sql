----- Database Exploration -----
-- Explore All Objects in the Database
SELECT *
FROM INFORMATION_SCHEMA.TABLES

-- Explore All Columns in the Database
SELECT *
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'

----- Dimensions Exploration -----
-- Explore All Countries our customers come from
SELECT DISTINCT country
FROM gold.dim_customers

-- Explore All Categories "The Major Divisions"
SELECT DISTINCT category, subcategory, product_name
FROM gold.dim_products
ORDER BY 1, 2, 3

----- Date Exploration -----
-- Find the date of the first and last order
SELECT
	MIN(order_date) AS first_order_date,
	MAX(order_date) AS last_order_date,
	DATEDIFF(year, MIN(order_date), MAX(order_date)) AS order_range_years
FROM gold.fact_sales

-- Find the youngest and the oldest customers
SELECT
	MIN(birthdate) AS oldest_birthdate,
	DATEDIFF(year, MIN(birthdate), GETDATE()) AS oldest_age,
	MAX(birthdate) AS yongest_birthdate,
	DATEDIFF(year, MAX(birthdate), GETDATE()) AS youngest_age
FROM gold.dim_customers

----- Measures Exploration -----
-- Find the Total Sales
SELECT SUM(sales_amount) AS total_sales
FROM gold.fact_sales

-- Find how many items are sold
SELECT SUM(quantity) AS total_quantity
FROM gold.fact_sales   

-- Find the average selling price
SELECT AVG(price) AS avg_price
FROM gold.fact_sales

-- Find the Total number of Orders
SELECT COUNT(DISTINCT order_number) as total_orders
FROM gold.fact_sales

-- Find the total number of products
SELECT COUNT(DISTINCT product_key) as total_products
FROM gold.dim_products

-- Find the total number of customers
SELECT COUNT(customer_key) AS total_customers
FROM gold.dim_customers

-- Find the total number of customers that has place an order
SELECT COUNT(DISTINCT customer_key) AS total_customers
FROM gold.fact_sales 

-- Generate a Reprot that shows all key metrics of the business
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS total_sales FROM gold.fact_sales
UNION ALL
SELECT 'Total Quanity', SUM(quantity) AS total_quantity FROM gold.fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) AS avg_price FROM gold.fact_sales
UNION ALL
SELECT 'Total No. Orders', COUNT(DISTINCT order_number) as total_orders FROM gold.fact_sales
UNION ALL
SELECT 'Total No. Products', COUNT(DISTINCT product_key) as total_products FROM gold.dim_products
UNION ALL
SELECT 'Total No. Customers', COUNT(customer_key) AS total_customers FROM gold.dim_customers

----- Magnitude -----
 -- Find total customers by country
 SELECT
	country,
	COUNT(customer_key) AS total_customers
 FROM gold.dim_customers
 GROUP BY country
 ORDER BY total_customers DESC

 -- Find total customers by gender
 SELECT
	gender,
	COUNT(customer_key) AS total_customers
 FROM gold.dim_customers
 GROUP BY gender
 ORDER BY total_customers DESC

 -- Find total products by category
SELECT
	category, 
	COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC

 -- What is the average costs in each category?
SELECT
	category, 
	AVG(cost) AS avg_costs
FROM gold.dim_products
GROUP BY category
ORDER BY avg_costs DESC

 -- What is the total revenue generated for each category?
 SELECT
	p.category,
	SUM(f.sales_amount) AS total_revenue
 FROM gold.fact_sales f
 LEFT JOIN gold.dim_products p
 ON p.product_key = f.product_key
 GROUP BY p.category
 ORDER BY total_revenue DESC

 -- Find total revenue is generated by each customer
  SELECT
	c.customer_key,
	c.first_name,
	c.last_name,
	SUM(f.sales_amount) AS total_revenue
 FROM gold.fact_sales f
 LEFT JOIN gold.dim_customers c
 ON c.customer_key = f.customer_key
 GROUP BY
	c.customer_key,
	c.first_name,
	c.last_name
 ORDER BY total_revenue DESC


 -- What is the distribution of sold items across countries?
  SELECT
	c.country,
	SUM(f.quantity) AS total_sold_items
 FROM gold.fact_sales f
 LEFT JOIN gold.dim_customers c
 ON c.customer_key = f.customer_key
 GROUP BY c.country
 ORDER BY total_sold_items DESC

 ----- Ranking Analysis -----
 -- Which 5 products generate the highest revenue?
SELECT TOP 5
	p.product_name,
	SUM(f.sales_amount) AS total_revenue
 FROM gold.fact_sales f
 LEFT JOIN gold.dim_products p
 ON p.product_key = f.product_key
 GROUP BY p.product_name
 ORDER BY total_revenue DESC

SELECT *
FROM (
	SELECT
		p.product_name,
		SUM(f.sales_amount) AS total_revenue,
		ROW_NUMBER() OVER (ORDER BY SUM(f.sales_amount) DESC) AS rank_products
	FROM gold.fact_sales f
	LEFT JOIN gold.dim_products p
	ON p.product_key = f.product_key
	GROUP BY p.product_name) t
WHERE rank_products <= 5

 -- What are the 5 worst-performing products in terms of sales?
 SELECT TOP 5
	p.product_name,
	SUM(f.sales_amount) AS total_revenue
 FROM gold.fact_sales f
 LEFT JOIN gold.dim_products p
 ON p.product_key = f.product_key
 GROUP BY p.product_name
 ORDER BY total_revenue ASC

-- Which 5 subcategory generate the highest revenue?
SELECT TOP 5
	p.subcategory,
	SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.subcategory
ORDER BY total_revenue DESC

-- Find the Top-10 customers who have generated the highest revenue And 3 customer with the fewest orders placed
  SELECT TOP 10
	c.customer_key,
	c.first_name,
	c.last_name,
	COUNT(DISTINCT f.order_number) AS total_orders
 FROM gold.fact_sales f
 LEFT JOIN gold.dim_customers c
 ON c.customer_key = f.customer_key
 GROUP BY
	c.customer_key,
	c.first_name,
	last_name
ORDER BY total_orders
